// <auto-generated />
using System;
using ArtGalleryAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ArtGalleryAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220423021554_StatVowelFkKeyChange")]
    partial class StatVowelFkKeyChange
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ArtGalleryAPI.Entities.Post", b =>
                {
                    b.Property<string>("PostId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("ArtGalleryAPI.Entities.StatVowels", b =>
                {
                    b.Property<Guid>("StatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("PairVowelCount")
                        .HasColumnType("int");

                    b.Property<string>("PostId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SingleVowelCount")
                        .HasColumnType("int");

                    b.Property<int>("TotalWordCount")
                        .HasColumnType("int");

                    b.HasKey("StatId");

                    b.HasIndex("PostId")
                        .IsUnique();

                    b.ToTable("StatVowels");
                });

            modelBuilder.Entity("ArtGalleryAPI.Entities.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBannded")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEditor")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = "shakes",
                            EmailAddress = "will@theshakes.mnd",
                            FirstName = "William",
                            IsBannded = false,
                            IsEditor = false,
                            LastName = "Shakespear",
                            PasswordHash = "1255376235",
                            UserRole = "M"
                        },
                        new
                        {
                            UserId = "maups",
                            EmailAddress = "mau@paro.mnd",
                            FirstName = "Guy De",
                            IsBannded = false,
                            IsEditor = false,
                            LastName = "Maupesant",
                            PasswordHash = "1255376235",
                            UserRole = "U"
                        },
                        new
                        {
                            UserId = "mws",
                            EmailAddress = "simon@kaballana.mnd",
                            FirstName = "Martin",
                            IsBannded = false,
                            IsEditor = true,
                            LastName = "Wickramasinghe",
                            PasswordHash = "1255376235",
                            UserRole = "U"
                        });
                });

            modelBuilder.Entity("ArtGalleryAPI.Entities.Post", b =>
                {
                    b.HasOne("ArtGalleryAPI.Entities.User", null)
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ArtGalleryAPI.Entities.StatVowels", b =>
                {
                    b.HasOne("ArtGalleryAPI.Entities.Post", "Post")
                        .WithOne("StatVowels")
                        .HasForeignKey("ArtGalleryAPI.Entities.StatVowels", "PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("ArtGalleryAPI.Entities.Post", b =>
                {
                    b.Navigation("StatVowels")
                        .IsRequired();
                });

            modelBuilder.Entity("ArtGalleryAPI.Entities.User", b =>
                {
                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
